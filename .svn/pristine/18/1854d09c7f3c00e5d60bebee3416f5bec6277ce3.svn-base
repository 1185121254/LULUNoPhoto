
//
//  PublicTools.m
//  HuaxiaDotor
//
//  Created by kock on 16/3/28.
//  Copyright © 2016年 kock. All rights reserved.
//

#import "PublicTools.h"
#import "LoginViewController.h"
@implementation PublicTools

//单利
static NSMutableDictionary *dic;
+(NSMutableDictionary *)isContantHUD:(UIViewController *)vc{
    if (dic == nil) {
        dic = [NSMutableDictionary dictionary];
    }
    for (UIView *vi in vc.view.subviews) {
        if ([vi isKindOfClass:[MBProgressHUD class]]) {
            [dic setObject:(MBProgressHUD *)vi forKey:@"hud"];
            return dic;
        }
    }
    [dic setObject:@"1" forKey:@"hud"];
    return dic;
}

/**
 *  移动到登录页面
 */
+(void)moveTologinPage
{
    
    UIStoryboard *log=[UIStoryboard storyboardWithName:@" LoginView" bundle:[NSBundle mainBundle]];
    LoginViewController *login=[log instantiateViewControllerWithIdentifier:@"LoginView"];
    login.from = @"exit";
    UINavigationController *currentVc=[PublicTools getCurrentVC];
    [[currentVc.viewControllers lastObject].navigationController pushViewController:login animated:YES];
    
}

+(UINavigationController *)getCurrentVC
{
    UINavigationController *result=nil;
    UIWindow *window=[[UIApplication sharedApplication] keyWindow];
    if (window.windowLevel!=UIWindowLevelNormal)
    {
        NSArray *windows=[[UIApplication sharedApplication]windows];
        for(UIWindow *topMoveWindow in windows)
        {
            if (topMoveWindow.windowLevel == UIWindowLevelNormal)
            {
                window = topMoveWindow;
                break;
            }
        }
    }
    UIView *frontView = [[window subviews]objectAtIndex:0];
    id nextResponder =[frontView nextResponder];
    if ([nextResponder isKindOfClass:[UINavigationController class]])
    {
        UINavigationController *navigationView=(UINavigationController *)nextResponder;
        result=navigationView;
    }
    else
    {
        result=(UINavigationController *)window.rootViewController;
    }
    return result;
}

+(NSMutableArray *)setData:(NSArray *)arryValue{

    NSMutableArray *arryData = [[NSMutableArray alloc]init];
    for (NSDictionary *dicValue in arryValue) {
        PatientModel *patient = [[PatientModel alloc]init];
        NSArray*arryKey = [dicValue allKeys];
        for (NSString *key in arryKey) {
            
            [patient setValue:[dicValue objectForKey:key] forKey:key];
            
        }
        [arryData addObject:patient];
    }
    return  arryData;
}

@end
