//
//  KockSettingPasswordViewController.m
//  HuaxiaDotor
//
//  Created by kock on 16/5/17.
//  Copyright © 2016年 kock. All rights reserved.
//

#import "KockSettingPasswordViewController.h"
#import "KockPhoneNumberSettingViewController.h"
#import "LoginViewController.h"

@interface KockSettingPasswordViewController ()


@property (weak, nonatomic) IBOutlet UIButton *btn_next;
@property (weak, nonatomic) IBOutlet UITextField *txt_oldMassage;
@property (weak, nonatomic) IBOutlet UITextField *txt_password;
@property (weak, nonatomic) IBOutlet UITextField *txt_againPassword;

@end

@implementation KockSettingPasswordViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
   
    _btn_next.layer.cornerRadius = 3;
    _btn_next.layer.masksToBounds = YES;
    
    self.view.backgroundColor = [UIColor colorWithWhite:1.000 alpha:0.950];
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 下一步
- (IBAction)btnNextAction:(UIButton *)sender
{
    if ([_txt_password.text isEqualToString:@""]&&[_txt_againPassword.text isEqualToString:@""])
    {
        [showAlertView showAlertViewWithOnlyMessage:@"密码不能为空"];
    }
    else if (![_txt_password.text isEqualToString:_txt_againPassword.text])
    {
        [showAlertView showAlertViewWithOnlyMessage:@"两次输入的密码必须一致"];
    }
    else
    {
        //提交修改
        [self setingPassword];
    }
}

#pragma mark - 发送密码设置请求
-(void)setingPassword
{
    NSUserDefaults *userDefaults=[NSUserDefaults standardUserDefaults];
    //获取用户秘钥
    NSString *verifyCode;
    verifyCode=[userDefaults objectForKey:@"verifyCode"];
    NSString *userID;
    userID = [userDefaults objectForKey:@"id"];
    
    //HEAD
    NSDictionary *heads=@{RESPONSE_KEY_VERIFYCODE:verifyCode};
    
    //BODY
    NSMutableDictionary *parameters=[[NSMutableDictionary alloc]init];
    
    [parameters setObject:userID forKey:@"doctorId"];
    
    [parameters setObject:_txt_oldMassage.text forKey:@"oldpassword"];
    
    [parameters setObject:_txt_againPassword.text forKey:@"password"];
    
    //获取需要上传的数据
    //GET
    [RequestManager getWithURLString:REPASSWORD heads:heads parameters:parameters success:^(id responseObject)
     {
         if ([responseObject[@"code"] integerValue]==-10000)
         {
             [showAlertView showAlertViewWithMessage:[NSString stringWithFormat:@"%@",responseObject[@"message"]]];
         }
         else if ([responseObject[@"code"] integerValue]==10000)
         {
              CXAlertView *cxAlertView = [[CXAlertView alloc]initWithTitle:@"提示" message:@"验证通过,恭喜您密码修改成功" cancelButtonTitle:nil];
              [cxAlertView addButtonWithTitle:@"确定" type:CXAlertViewButtonTypeCustom handler:^(CXAlertView *alertView, CXAlertButtonItem *button) {
                  alertView.showBlurBackground = YES;
                  [alertView dismiss];
              }];
             UIStoryboard *log=[UIStoryboard storyboardWithName:@" LoginView" bundle:[NSBundle mainBundle]];
             LoginViewController *login=[log instantiateViewControllerWithIdentifier:@"LoginView"];
             login.from = @"exit";
             [self.navigationController pushViewController:login animated:YES];
            
              cxAlertView.showBlurBackground = YES;
              [cxAlertView show];
//              NSLog(@"%@",responseObject);
         }

     } failure:^(NSError *error)
     {
         NSLog(@"ERROR%@",error);
     }];
}


@end
