//
//  MediconeViewController.m
//  HuaxiaDotor
//
//  Created by ydz on 16/5/9.
//  Copyright ¬© 2016Âπ¥ kock. All rights reserved.
//

#import "CheckViewController.h"
#import "SearchCheckViewController.h"


@interface CheckViewController ()<UITableViewDelegate,UITableViewDataSource>
{
    NSMutableArray *_arryData;
    UITableView *_tableVIew;
    MBProgressHUD *_HUD;
}
@end

@implementation CheckViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    _arryData = [[NSMutableArray alloc]init];
    
    self.title = @"Ê£ÄÊü•ÂàóË°®";
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor = kBackgroundColor;
    
    UIButton *btnSearchCon = [UIButton buttonWithType:UIButtonTypeCustom];
    btnSearchCon.backgroundColor = [UIColor whiteColor];
    btnSearchCon.frame = CGRectMake(20, 70, kWith-40, 30);
    [btnSearchCon setTitle:@"üîçËæìÂÖ•ÊÇ£ËÄÖÁõ∏ÂÖ≥‰ø°ÊÅØ" forState:UIControlStateNormal];
    [btnSearchCon setTitleColor:kBoradColor forState:UIControlStateNormal];
    [btnSearchCon addTarget:self action:@selector(onSearchCheck) forControlEvents:UIControlEventTouchUpInside];
    btnSearchCon.layer.cornerRadius = 3;
    btnSearchCon.layer.masksToBounds = YES;
    [self.view addSubview:btnSearchCon];
    
    _tableVIew = [[UITableView alloc]initWithFrame:CGRectMake(0, 110, kWith, kHeight - 110)];
    _tableVIew.dataSource = self;
    _tableVIew.delegate = self;
    _tableVIew.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.view addSubview:_tableVIew];
    
    //‰∏ä‰∏ãÊãâÂà∑Êñ∞
    _tableVIew.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewTop)];
    //‰∏äÊèê
    _tableVIew.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
    
    
    [self getNetConsultationListFindAndPage:@(1) andRow:@(20) andUPorDown:YES];
}

#pragma mark - ‰∏ãÊãâ
-(void)loadNewTop
{
    [self getNetConsultationListFindAndPage:@(1) andRow:@(20) andUPorDown:YES];
}

#pragma mark - ‰∏äÊèê
-(void)loadMoreData
{
    [self getNetConsultationListFindAndPage:@(1) andRow:@(20) andUPorDown:NO];
}

#pragma mark - Ëé∑ÂèñÁóÖ‰æãË°®Ê†ºÊï∞ÊçÆ
-(void)getNetConsultationListFindAndPage:(NSNumber*)Page andRow:(NSNumber*)Row andUPorDown:(BOOL)Up
{
    static NSInteger page = 1;
    _HUD = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    _HUD.mode = MBProgressHUDModeIndeterminate;
    _HUD.labelText = @"Ê≠£Âú®Âä†ËΩΩ";
    _HUD.hidden = NO;
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]init];
    if (Up==YES)
    {
        page = 1;
        [_tableVIew.mj_footer resetNoMoreData];
        [dic setObject:[NSString stringWithFormat:@"%ld",page] forKey:@"page"];
        _arryData = [[NSMutableArray alloc]init];
    }
    else
    {
        page ++;
        [dic setObject:[NSString stringWithFormat:@"%ld",page] forKey:@"page"];
    }
    
    [dic setObject:[NSString stringWithFormat:@"%@",Row] forKey:@"rows"];
    [dic setObject:@"" forKey:@"fuzzyName"];
    [RequestManager checkProgram:[NSString stringWithFormat:@"%@/api/Share/GetShareCheck",NET_URLSTRING] parameters:dic Complation:^(NSMutableArray *arry) {
         _HUD.hidden = YES;
         
         if (arry==nil||arry.count==0)
         {
             if (Up==NO)
             {
                 [_tableVIew.mj_footer endRefreshingWithNoMoreData];
             }else
             {
                 [_tableVIew.mj_header endRefreshing];
             }
             [_tableVIew reloadData];
         }else
         {
             NSMutableArray *arrCom = [[NSMutableArray alloc]init];
             //ÂàùÂßãÊï∞ÊçÆ‰π¶Âê¶‰∏∫Á©∫
             if (_arryData==nil)
             {
                 _arryData= arry;
             }
             else
             {
                 if (Up==YES)
                 {
                     _arryData= arry;
                 }
                 else
                 {
                     arrCom = arry;
                     NSMutableArray *add = [NSMutableArray arrayWithArray:_arryData];
                     for (NSMutableDictionary*dic in arrCom)
                     {
                         [add addObject:dic];
                     }
                     _arryData = [NSMutableArray arrayWithArray:add];
                 }
             }
             //ÊòØÂê¶ÊúÄÂêé‰∏ÄÊù°Êï∞ÊçÆ
             [_tableVIew reloadData];
             //ÊòØ‰∏äÊèêËøòÊòØ‰∏ãÊãâ
             if (Up==YES)
             {
                 [_tableVIew.mj_header endRefreshing];
             }
             else
             {
                 [_tableVIew.mj_footer endRefreshing];
             }
         }
         
     } Fail:^(NSError *error) {
         _HUD.hidden = YES;
         kAlter(@"Êï∞ÊçÆËØ∑Ê±ÇÂ§±Ë¥•");
         if (Up==YES)
         {
             [_tableVIew.mj_header endRefreshing];
         }
         else
         {
             [_tableVIew.mj_footer endRefreshing];
         }
     }];
}


-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return _arryData.count;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{

    static NSString *reuse  =@"med";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:reuse];
    if (cell == nil) {
        
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:reuse];
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
    
    CheckModel *model  = _arryData[indexPath.row];
    cell.textLabel.text = model.name;
    return  cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    [_tableVIew deselectRowAtIndexPath:indexPath animated:YES];
    CheckModel *model  = _arryData[indexPath.row];
    NSDictionary *dic = @{@"checkId":model.Id,@"checkName":model.name};
    [[NSNotificationCenter defaultCenter]postNotificationName:@"check" object:nil userInfo:dic];
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)onSearchCheck{
    SearchCheckViewController *search = [[SearchCheckViewController alloc]init];
    [self.navigationController pushViewController:search animated:YES];
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
