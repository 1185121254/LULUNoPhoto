//
//  CaseDiscussViewController.m
//  HuaxiaDotor
//
//  Created by ydz on 16/5/24.
//  Copyright ¬© 2016Âπ¥ kock. All rights reserved.
//

#import "CaseDiscussViewController.h"
#import "CaseDiscussTableViewCell.h"
#import "Anasisy.h"
#import "CaseModel.h"

//#import "AddCaseViewController.h"
#import "ScDicsussViewController.h"

#import "CaseCommentViewController.h"
#import "MJRefresh.h"
#import "SearchCaseViewController.h"

@interface CaseDiscussViewController ()<UITableViewDelegate,UITableViewDataSource,NIMConversationManagerDelegate>
{
    UITableView *_tableView;
    NSMutableArray *_arrryData;
    
    NSDateFormatter *_dateformatte;
}
@end

@implementation CaseDiscussViewController

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    self.navigationController.navigationBar.hidden = NO;
    self.tabBarController.tabBar.hidden = YES;
    
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:@"1" forKey:@"page"];
    [dic setObject:@"20" forKey:@"rows"];
    [dic setObject:[kUserDefatuel objectForKey:@"id"] forKey:@"doctorId"];
    [dic setObject:@"" forKey:@"patientName"];
    MBProgressHUD *_HUD = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    _HUD.mode = MBProgressHUDModeIndeterminate;
    _HUD.labelText = @"Ê≠£Âú®Âä†ËΩΩ";
    _HUD.hidden = NO;
    [RequestManager CaseList:[NSString stringWithFormat:@"%@/api/Doctor/DiscussionListFind",NET_URLSTRING] Parameters:dic Complation:^(NSMutableArray *array) {
        _HUD.hidden = YES;
        if (array == nil || array.count == 0) {
            self.noData.hidden = NO;
            self.noData.frame = CGRectMake(0, (kHeight-60)/2, kWith, 60);
        }else
        {
        self.noData.hidden = YES;
        _arrryData = [self shengXuPatientConCase:array];
        [self getUnReadMsg];
        [_tableView reloadData];
        }
    } Fail:^(NSError *error) {
        _HUD.hidden = YES;
        kAlter(kFail);
    }];
}


- (void)viewDidLoad {
    [super viewDidLoad];
    _arrryData = [NSMutableArray array];
    self.title  =@"ËÆ®ËÆ∫‰∏≠ÁöÑÁóÖÂéÜ";
    self.view.backgroundColor = kBackgroundColor;
    self.automaticallyAdjustsScrollViewInsets = NO;
    
    UIButton *btnSearchCon = [UIButton buttonWithType:UIButtonTypeCustom];
    btnSearchCon.backgroundColor = [UIColor whiteColor];
    btnSearchCon.frame = CGRectMake(20, 64+10, kWith-40, 30);
    [btnSearchCon setTitle:@"üîçËæìÂÖ•ÊÇ£ËÄÖÁõ∏ÂÖ≥‰ø°ÊÅØ" forState:UIControlStateNormal];
    [btnSearchCon setTitleColor:kBoradColor forState:UIControlStateNormal];
    [btnSearchCon addTarget:self action:@selector(onSearchCAse) forControlEvents:UIControlEventTouchUpInside];
    btnSearchCon.layer.cornerRadius = 3;
    btnSearchCon.layer.masksToBounds = YES;
    [self.view addSubview:btnSearchCon];
    
    _dateformatte = [[NSDateFormatter alloc]init];
    [_dateformatte setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    [[NIMSDK sharedSDK].conversationManager addDelegate:self];
    
    _tableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 114, kWith, kHeight-114)];
    _tableView.backgroundColor = [UIColor clearColor];
    _tableView.separatorStyle =UITableViewCellSeparatorStyleNone;
    _tableView.dataSource = self;
    _tableView.delegate = self;
    [self.view addSubview:_tableView];

    UIBarButtonItem *rightCase = [[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@"t-+"] style:UIBarButtonItemStylePlain target:self action:@selector(onRightBtnCase)];
    self.navigationItem.rightBarButtonItem = rightCase;
    
    [_tableView registerClass:[CaseDiscussTableViewCell class] forCellReuseIdentifier:@"case"];
    
    __weak CaseDiscussViewController *weakSelf = self;
    _tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [weakSelf refreshData:YES];
    }];
    
    _tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        [weakSelf refreshData:NO];
    }];
}

-(void)refreshData:(BOOL)isDown{
    static NSInteger page = 1;
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:@"10" forKey:@"rows"];
    [dic setObject:[kUserDefatuel objectForKey:@"id"] forKey:@"doctorId"];
    [dic setObject:@"" forKey:@"patientName"];
    
    if (isDown == YES) {
        page = 1;
        [_tableView.mj_footer resetNoMoreData];
        [dic setObject:@(page) forKey:@"page"];
    }else
    {
        page++;
        [dic setObject:@(page) forKey:@"page"];
    }
    [RequestManager CaseList:[NSString stringWithFormat:@"%@/api/Doctor/DiscussionListFind",NET_URLSTRING] Parameters:dic Complation:^(NSMutableArray *array) {
        if (array == nil || array.count == 0) {
            if (isDown==NO) {
                [_tableView.mj_footer endRefreshingWithNoMoreData];
                return ;
            }else
            {
                [_tableView.mj_header endRefreshing];
                self.noData.frame = CGRectMake(0, (kHeight-60)/2, kWith, 60);
                self.noData.hidden = NO;
            }
        }else
        {
            self.noData.hidden = YES;
            if (isDown==YES)
            {
                _arrryData = [self shengXuPatientConCase:array];
            }
            else
            {
                NSMutableArray *add = [NSMutableArray arrayWithArray:_arrryData];
                for (CaseModel *model in array)
                {
                    [add addObject:model];
                }
                _arrryData = [self shengXuPatientConCase:add];
            }
        }
        if (isDown==YES)
        {
            [_tableView.mj_header endRefreshing];
        }
        else
        {
            [_tableView.mj_footer endRefreshing];
        }
        [self getUnReadMsg];
        [_tableView reloadData];
    } Fail:^(NSError *error) {
        kAlter(kFail);
    }];
    [_tableView.mj_header endRefreshing];
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return _arrryData.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 71;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{

    CaseDiscussTableViewCell *cell  = [tableView dequeueReusableCellWithIdentifier:@"case" forIndexPath:indexPath];

    CaseModel *model = _arrryData[indexPath.row];
    NSString *Sex;
    if ([model.sex isEqualToString:@"1"]) {
        Sex = @"Áî∑";
    }else{
        Sex = @"Â•≥";
    }
    cell.lblName.attributedText = [self setText:[NSString stringWithFormat:@"%@    %@  %@Â≤Å",model.patientName,Sex,model.age]];

    if (model.latestDate) {
        cell.lblTime.text =  model.latestDate;
    }else
    {
        cell.lblTime.text = model.createDate;
    }
    if (model.illness == nil) {
        cell.lblDesp.text = @"ÁóáÁä∂ÊèèËø∞:Êú™Â°´ÂÜô";
    }else
    {
        cell.lblDesp.text = [NSString stringWithFormat:@"ÁóáÁä∂ÊèèËø∞:%@",model.illness];
    }
    if ([model.NewMessage integerValue] == 0) {
        cell.lblNewMeg.hidden = YES;
    }else
    {
        cell.lblNewMeg.hidden = NO;
        cell.lblNewMeg.text = model.NewMessage;
    }
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    [_tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    CaseModel *model = _arrryData[indexPath.row];
    CaseCommentViewController *casep = [[CaseCommentViewController alloc]init];
    casep.model = model;
    [self.navigationController pushViewController:casep animated:YES];
}

-(BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    return YES;
}

-(NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath{
     return @"ÈÄÄÂá∫ËÆ®ËÆ∫ÁªÑ";
}

-(void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{

    CaseModel *model = _arrryData[indexPath.row];
    UIAlertController *alter = [UIAlertController alertControllerWithTitle:@"ÊèêÁ§∫" message:@"Á°ÆÂÆöË¶ÅÈÄÄÂá∫ËÆ®ËÆ∫ÁªÑÂêó?" preferredStyle:UIAlertControllerStyleAlert];
    [alter addAction:[UIAlertAction actionWithTitle:@"ÂèñÊ∂à" style:UIAlertActionStyleCancel handler:nil]];
    [alter addAction:[UIAlertAction actionWithTitle:@"Á°ÆÂÆö" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
       
        
        MBProgressHUD *_HUD = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        _HUD.mode = MBProgressHUDModeIndeterminate;
        _HUD.labelText = @"Ê≠£Âú®Âä†ËΩΩ";
        _HUD.hidden = NO;
        [[NIMSDK sharedSDK].teamManager quitTeam:model.teamId completion:^(NSError *error) {
            NSMutableDictionary *dicPara = [NSMutableDictionary dictionary];
            [dicPara setObject:model.disId forKey:@"disId"];
            [dicPara setObject:[kUserDefatuel objectForKey:@"id"] forKey:@"memberId"];
            [RequestManager CloseOnLine:[NSString stringWithFormat:@"%@/api/Doctor/DiscussionMemberDelete",NET_URLSTRING] Parameters:dicPara Complation:^(NSNumber *code) {
                    _HUD.hidden = YES;
                    if ([code integerValue] == 10000) {
                        [_arrryData removeObjectAtIndex:indexPath.row];
                        if (_arrryData.count == 0) {
                            self.noData.frame = CGRectMake(0, (kHeight-60)/2, kWith, 60);
                            self.noData.hidden = NO;
                        }
                        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
                    }
                    else{
                        kAlter(@"Êèê‰∫§Â§±Ë¥•");
                        return ;
                     }
            } Fail:^(NSError *error) {
                _HUD.hidden = YES;
                kAlter(@"Êèê‰∫§Â§±Ë¥•");
            }];

        }];
    }]];
    
    [self presentViewController:alter animated:YES completion:nil];
    
    
}

-(void)onRightBtnCase{
    ScDicsussViewController *addCase = [[ScDicsussViewController alloc]init];
    [self.navigationController pushViewController:addCase animated:YES];
}

//ÂØåÊñáÊú¨
-(NSMutableAttributedString *)setText:(NSString *)text{
    
    NSArray *arry = [text componentsSeparatedByString:@"    "];
    NSString *strUnit = arry[1];
    
    NSMutableAttributedString *medStr = [[NSMutableAttributedString alloc]initWithString:text];
    [medStr addAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:13]} range:[text rangeOfString:strUnit]];
    return medStr;
}

#pragma mark--------ÊêúÁ¥¢
-(void)onSearchCAse{

    SearchCaseViewController *search = [[SearchCaseViewController alloc]init];
    [self.navigationController pushViewController:search animated:YES];
}

#pragma mark--------ÂçáÂ∫è
-(NSMutableArray *)shengXuPatientConCase:(NSArray *)arry{
    NSDateFormatter *dateFormatter = [NSDateFormatter new];
    dateFormatter.dateFormat = @"yyyy/MM/dd HH:mm:ss";
    
    NSMutableArray * array = [NSMutableArray arrayWithArray:[arry sortedArrayUsingComparator:^NSComparisonResult(CaseModel *modelM1, CaseModel *modelM2) {
        NSDate *date1 = [dateFormatter dateFromString:modelM1.latestDate];
        NSDate *date2 = [dateFormatter dateFromString:modelM2.latestDate];
        NSComparisonResult result = [date2 compare:date1];
        return result == NSOrderedDescending;
    }]];
    return array;
}

#pragma mark-------Êú™ËØªÊ∂àÊÅØÂèòÂ∑≤ËØª

-(void)getUnReadMsg{

    _recentSessions = [[NIMSDK sharedSDK].conversationManager.allRecentSessions mutableCopy];
    
    for (CaseModel *model in _arrryData) {
        
        for (NIMRecentSession *recentSession in _recentSessions) {
            
            if ([recentSession.session.sessionId isEqualToString:model.teamId]) {
                
                model.NewMessage = [NSString stringWithFormat:@"%ld",(long)recentSession.unreadCount];
                NSDate *date = [NSDate dateWithTimeIntervalSinceNow:recentSession.lastMessage.timestamp];
                model.latestDate = [_dateformatte stringFromDate:date];
                
            }
        }

    }
}

//‰øÆÊîπÊúÄËøë‰ºöËØùÁöÑÂõûË∞É
- (void)didUpdateRecentSession:(NIMRecentSession *)recentSession
              totalUnreadCount:(NSInteger)totalUnreadCount{

}

//Âà†Èô§ÊúÄËøë‰ºöËØùÁöÑÂõûË∞É
- (void)didRemoveRecentSession:(NIMRecentSession *)recentSession
              totalUnreadCount:(NSInteger)totalUnreadCount{
    
}

//Âçï‰∏™‰ºöËØùÈáåÊâÄÊúâÊ∂àÊÅØË¢´Âà†Èô§ÁöÑÂõûË∞É
- (void)messagesDeletedInSession:(NIMSession *)session{
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
